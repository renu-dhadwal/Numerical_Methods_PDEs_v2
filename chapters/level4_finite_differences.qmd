# Level 3: Finite Differences and the Heat Equation

::: {.dialogue}
**Pavni:** Acharya, how do we actually *approximate* derivatives for a computer?

**Acharya:** We use the **finite difference method**. Since a computer can only work with discrete points, we replace continuous derivatives with difference quotients on a **grid**.

**Pavni:** A grid? Like equally spaced points?

**Acharya:** Exactly. Suppose we have points $x_0, x_1, \dots, x_N$ with spacing $\Delta x$. Then:
- **Forward difference** for the first derivative:
  $$
  u'(x_i) \approx \frac{u(x_{i+1}) - u(x_i)}{\Delta x}
  $$
- **Backward difference**:
  $$
  u'(x_i) \approx \frac{u(x_i) - u(x_{i-1})}{\Delta x}
  $$
- **Central difference**:
  $$
  u'(x_i) \approx \frac{u(x_{i+1}) - u(x_{i-1})}{2\Delta x}
  $$

**Pavni:** Which one is better?

**Acharya:** Central differences are usually more accurate (error $\mathcal{O}((\Delta x)^2)$). Forward and backward are first-order accurate (error $\mathcal{O}(\Delta x)$).  
For the **second derivative**, we use:
$$
u''(x_i) \approx \frac{u(x_{i-1}) - 2u(x_i) + u(x_{i+1})}{(\Delta x)^2}.
$$

**Pavni:** So we can replace calculus by algebra using these formulas?

**Acharya:** Precisely. Now let us apply this to a PDE.
:::

---

## Application: The Heat Equation

::: {.dialogue}
**Acharya:** Consider the 1D heat equation:
$$
u_t = \alpha u_{xx}, \quad 0 < x < 1,\; t>0
$$
with boundary conditions $u(0,t) = u(1,t) = 0$ and initial profile $u(x,0) = f(x)$.

We set up a grid:
- In space: $x_i = i\Delta x,\; i=0,\dots,N$  
- In time: $t^n = n\Delta t,\; n=0,1,2,\dots$

At each point, let $u_i^n \approx u(x_i,t^n)$.

**Pavni:** And now we replace derivatives?

**Acharya:** Correct.  
- Time derivative (forward difference):
  $$
  u_t(x_i,t^n) \approx \frac{u_i^{n+1} - u_i^n}{\Delta t}
  $$
- Spatial second derivative (central difference):
  $$
  u_{xx}(x_i,t^n) \approx \frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{(\Delta x)^2}
  $$

Plugging these into the PDE, we get:
$$
\frac{u_i^{n+1} - u_i^n}{\Delta t} = \alpha \,\frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{(\Delta x)^2}.
$$

Rearranging:
$$
u_i^{n+1} = u_i^n + \lambda\,(u_{i-1}^n - 2u_i^n + u_{i+1}^n),
$$
where $\lambda = \frac{\alpha \Delta t}{(\Delta x)^2}$.
:::

---

## Stability Condition

::: {.dialogue}
**Pavni:** So we can just keep applying this formula to march forward in time?

**Acharya:** Yes, but with a caveat. This scheme, called **FTCS (Forward Time, Central Space)**, is only stable if:
$$
\lambda \leq \tfrac{1}{2}.
$$

**Pavni:** So if $\Delta t$ is too large, the scheme fails?

**Acharya:** Exactly. The numerical solution will blow up, even though the true solution is stable. Choosing $\Delta t$ small enough ensures stability.
:::

---

## Mini-Quizzes
::: {.quiz}
**Quiz 1:**  
Let $u(x) = x^2$. With $\Delta x = 0.1$, approximate $u'(1)$ using:  
1. Forward difference  
2. Central difference  

Compare with the exact derivative $u'(1) = 2$. Which is more accurate?
:::

::: {.callout-tip collapse=true}
### Answer 1

- Forward difference:
  $$
  \frac{u(1+\Delta x)-u(1)}{\Delta x}=\frac{(1.1)^2-1^2}{0.1}=\frac{1.21-1}{0.1}=2.1.
  $$

- Central difference:
  $$
  \frac{u(1+\Delta x)-u(1-\Delta x)}{2\Delta x}
  =\frac{(1.1)^2-(0.9)^2}{0.2}=\frac{1.21-0.81}{0.2}=2.0.
  $$

- Exact derivative: $u'(1)=2$.

**Conclusion:** The central difference gives the exact value here (error $0$), while the forward difference has error $0.1$. Central is more accurate (as expected — it is second-order).
:::

---

::: {.quiz}
**Quiz 2:**  
Suppose $\alpha = 1$, $\Delta x = 0.1$. What is the maximum $\Delta t$ for stability in the explicit scheme?  

(Hint: $\lambda = \dfrac{\alpha \Delta t}{(\Delta x)^2} \leq \tfrac{1}{2}$.)
:::

::: {.callout-tip collapse=true}
### Answer 2

We need
$$
\lambda=\frac{\alpha\,\Delta t}{(\Delta x)^2}\le\frac{1}{2}.
$$
With $\alpha=1$ and $\Delta x=0.1$, $(\Delta x)^2=0.01$. So
$$
\frac{\Delta t}{0.01}\le\frac{1}{2}\quad\Rightarrow\quad
\Delta t \le 0.01\times\frac{1}{2}=0.005.
$$

**Maximum allowable** $\displaystyle \Delta t = 0.005$.
:::
::: {.callout-note collapse=true}
### Derivations: error terms & local truncation error

**First-derivative — forward difference.**  
Taylor expand about $x_i$:
\[
u(x_{i+1}) = u(x_i) + \Delta x\,u'(x_i) + \tfrac{(\Delta x)^2}{2}u''(x_i) + \tfrac{(\Delta x)^3}{6}u^{(3)}(x_i) + \mathcal{O}(\Delta x^4).
\]
Hence
\[
\frac{u(x_{i+1})-u(x_i)}{\Delta x} = u'(x_i) + \tfrac{\Delta x}{2}u''(x_i) + \mathcal{O}(\Delta x^2),
\]
so the forward difference is **first-order**: error $= \mathcal{O}(\Delta x)$.

---

**First-derivative — central difference.**  
Using expansions at $x_{i\pm1}$ and subtracting,
\[
\frac{u(x_{i+1})-u(x_{i-1})}{2\Delta x}
= u'(x_i) + \tfrac{(\Delta x)^2}{6}u^{(3)}(x_i) + \mathcal{O}(\Delta x^4),
\]
so the central difference is **second-order**: error $= \mathcal{O}(\Delta x^2)$.

---

**Second-derivative — central second difference.**  
From Taylor expansions,
\[
\frac{u(x_{i-1})-2u(x_i)+u(x_{i+1})}{(\Delta x)^2}
= u''(x_i) + \tfrac{(\Delta x)^2}{12}u^{(4)}(x_i)+\mathcal{O}(\Delta x^4),
\]
so the second difference is **second-order**: error $= \mathcal{O}(\Delta x^2)$.

---

**Local truncation error for FTCS (heat equation).**  
Substitute the exact solution $u(x,t)$ into the FTCS formula
\[
\frac{u(x_i,t^{n+1})-u(x_i,t^n)}{\Delta t}
= \alpha\frac{u(x_{i-1},t^n)-2u(x_i,t^n)+u(x_{i+1},t^n)}{(\Delta x)^2}
\]
and define the residual (local truncation error) $\tau_i^n$ by the left minus right-hand sides. Using Taylor in time,
\[
u(x_i,t^{n+1}) = u(x_i,t^n) + \Delta t\,u_t + \tfrac{\Delta t^2}{2}u_{tt} + \mathcal{O}(\Delta t^3),
\]
and the spatial expansion for the second difference, then using the PDE $u_t=\alpha u_{xx}$ to cancel leading terms, one obtains the leading behaviour
\[
\tau_i^n = \tfrac{\Delta t}{2}\,u_{tt}(x_i,t^n) - \alpha\,\tfrac{(\Delta x)^2}{12}\,u_{xxxx}(x_i,t^n) + \mathcal{O}(\Delta t^2)+\mathcal{O}(\Delta x^4).
\]
Therefore FTCS is **consistent** with truncation $\tau_i^n = \mathcal{O}(\Delta t) + \mathcal{O}(\Delta x^2)$. By Lax–Richtmyer: **consistency + stability ⇒ convergence** (so with the CFL $\lambda\le 1/2$ we get global error $\sim \mathcal{O}(\Delta t + \Delta x^2)$ in appropriate norms).
:::

---
<!-- 
## In-class Exercise (compute & evaluate local truncation error)

**Problem.** Take the heat equation with $\alpha>0$ and the exact solution
\[
u(x,t) = \sin(\pi x)\,e^{-\pi^2\alpha t}
\]
on $0\le x\le1$ (this satisfies homogeneous Dirichlet BCs). For the FTCS scheme with time step $\Delta t$ and space step $\Delta x$:

1. Derive the leading-order local truncation error $\tau_i^n$ at grid point $(x_i,t^n)$ (use the formula above).
2. Evaluate the leading terms explicitly for this $u$ (express in terms of $\alpha$, $\Delta t$, $\Delta x$, and trigonometric factors).
3. Numerically evaluate $\tau$ at $x_i=0.5$, $t^n=0$, with $\alpha=1$, $\Delta x=0.1$, $\Delta t=0.005$.

::: {.callout-tip collapse=true}
### Solution — worked steps

**1. Leading-order form.** From the derivation:
\[
\tau_i^n \approx \tfrac{\Delta t}{2}\,u_{tt}(x_i,t^n) - \alpha\,\tfrac{(\Delta x)^2}{12}\,u_{xxxx}(x_i,t^n).
\]

**2. Compute derivatives for $u(x,t)=\sin(\pi x)e^{-\pi^2\alpha t}$.**

- First, note $u_t = -\pi^2\alpha\,\sin(\pi x)e^{-\pi^2\alpha t}$, so
  \[
  u_{tt} = (\!-\pi^2\alpha\!)^2 \sin(\pi x)e^{-\pi^2\alpha t} = \pi^4\alpha^2 \sin(\pi x)e^{-\pi^2\alpha t}.
  \]

- For spatial derivatives, $\partial_x^4\sin(\pi x)=\pi^4\sin(\pi x)$, so
  \[
  u_{xxxx} = \pi^4\sin(\pi x)e^{-\pi^2\alpha t}.
  \]

Substitute into $\tau$:
\[
\tau_i^n \approx \left(\tfrac{\Delta t}{2}\,\pi^4\alpha^2 \;-\; \alpha\,\tfrac{(\Delta x)^2}{12}\,\pi^4\right)\sin(\pi x_i)\,e^{-\pi^2\alpha t^n}.
\]

Factor $\pi^4\sin(\pi x_i)e^{-\pi^2\alpha t^n}$:
\[
\tau_i^n \approx \pi^4\sin(\pi x_i)e^{-\pi^2\alpha t^n}\left(\tfrac{\alpha^2\Delta t}{2} - \alpha\,\tfrac{(\Delta x)^2}{12}\right).
\]

**3. Numeric evaluation at $x_i=0.5$, $t^n=0$, $\alpha=1$, $\Delta x=0.1$, $\Delta t=0.005$.**

Compute factors:
- $\sin(\pi x_i)=\sin(\pi/2)=1$.
- $e^{-\pi^2\alpha t^n}=e^{0}=1$.
- $\pi^4 \approx 97.4091$.

Now compute the parenthesis:
\[
\tfrac{\alpha^2\Delta t}{2} - \alpha\,\tfrac{(\Delta x)^2}{12}
= \tfrac{1\times 0.005}{2} - \tfrac{1\times 0.01}{12}
= 0.0025 - 0.0008333333 = 0.0016666667.
\]

Hence
\[
\tau \approx \pi^4 \times 1 \times 1 \times 0.0016666667
\approx 97.4091 \times 0.0016666667
\approx 0.1623485.
\]

So the leading-order truncation error at that grid point is approximately $\boxed{1.62\times 10^{-1}}$ (note: this is the residual value of substituting the exact solution into the discrete formula; the global error will be smaller when the scheme is stable and $\Delta x,\Delta t$ are refined).

**Comment:** If you make $\Delta x$ smaller (e.g. 0.05) and reduce $\Delta t$ accordingly (e.g. to respect CFL), this $\tau$ will decrease roughly like $\mathcal{O}(\Delta t + \Delta x^2)$ as expected.
:::
 -->
