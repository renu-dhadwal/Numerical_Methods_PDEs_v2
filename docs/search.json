[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Numerical Methods for PDEs: An Interactive Journey",
    "section": "",
    "text": "0.1 Numerical Methods for PDEs: An Interactive Journey",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Numerical Methods for PDEs: An Interactive Journey</span>"
    ]
  },
  {
    "objectID": "index.html#levels",
    "href": "index.html#levels",
    "title": "Numerical Methods for PDEs: An Interactive Journey",
    "section": "1.1 Levels",
    "text": "1.1 Levels\n\nLevel 1: Origins of PDEs\nLevel 2: Classification of PDEs\nLevel 3: Physical Interpretation and boundary conditions\nLevel 4: Finite Difference Methods- Introduction with application to the Heat Eqaution\nLevel 5 : Hyperbolic PDEs - Wave Equation",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Numerical Methods for PDEs: An Interactive Journey</span>"
    ]
  },
  {
    "objectID": "chapters/level1_history_pdes.html",
    "href": "chapters/level1_history_pdes.html",
    "title": "2¬† Level 1: A Historical Glimpse of PDEs",
    "section": "",
    "text": "Pavni: Acharya, where did all these partial differential equations come from? They seem so abstract.\nAcharya: Ah, Pavni, they did not begin in abstraction. They began with strings, heat, and the mysteries of the heavens.\nPavni: Strings? You mean music?\nAcharya: Exactly! In 1746, d‚ÄôAlembert studied how a vibrating string produces sound. From that, he wrote down the wave equation. Soon after, Euler extended it to drums and membranes. So you see, music and mathematics are deeply connected.\nPavni: That‚Äôs beautiful! And the heat equation?\nAcharya: That came from Joseph Fourier in the early 1800s. He asked: How does heat spread through a solid body? His answer was the heat equation, and in solving it he gave us the gift of Fourier series.\nPavni: So Fourier series were born from studying heat?\nAcharya: Precisely. And then Laplace studied gravitational attraction and derived the Laplace equation, describing potentials in physics. Poisson later generalized it with the Poisson equation, where sources appear inside the field.\nPavni: So each new equation came from a real phenomenon.\nAcharya: Just so. Later, in the 19th century, Navier and Stokes wrote down the equations of fluid motion ‚Äî the Navier‚ÄìStokes equations. Even today, their mysteries are not fully solved.\nPavni: (smiling) So PDEs are not just formulas on paper. They are echoes of sound, flows of heat, gravity, and water.\nAcharya: Well said, Pavni. They are the language by which nature speaks to us.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Level 1: A Historical Glimpse of PDEs</span>"
    ]
  },
  {
    "objectID": "chapters/level2_classification_pdes.html",
    "href": "chapters/level2_classification_pdes.html",
    "title": "3¬† Level 2: Classification of PDEs",
    "section": "",
    "text": "3.1 Mini Quizzes\nQuiz 1: Identify the order\nWhich of the following is a second-order PDE?\n1. $ u_t + cu_x = 0 $\n2. $ u_t = u_{xx} $\n3. $ u u_x = 0 $\nQuiz 2: Linearity check\nWhich PDE is nonlinear?\n1. $ u_t = u_{xx} $\n2. $ u_t + u u_x = 0 $\nQuiz 3: Homogeneous or inhomogeneous\nClassify: $ u_{xx} + u_{yy} = f(x,y) $.\nQuiz 4: Type of second-order PDE\nFor $ u_{xx} + 2u_{xy} + u_{yy} = 0 $, compute $ B^2 - 4AC $. What type is it?\nQuiz 5: Physical meaning\nMatch each equation with its physical interpretation:\n- Heat equation\n- Wave equation\n- Laplace‚Äôs equation",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Level 2: Classification of PDEs</span>"
    ]
  },
  {
    "objectID": "chapters/level2_classification_pdes.html#mini-quizzes",
    "href": "chapters/level2_classification_pdes.html#mini-quizzes",
    "title": "3¬† Level 2: Classification of PDEs",
    "section": "",
    "text": "TipAnswer 1\n\n\n\n\n\nEquation (2) $ u_t = u_{xx} $ is second-order because of the \\(u_{xx}\\) term.\n\n\n\n\n\n\n\n\n\n\n\nTipAnswer 2\n\n\n\n\n\nEquation (2) is nonlinear because of the product term \\(u u_x\\).\n\n\n\n\n\n\n\n\n\n\n\nTipAnswer 3\n\n\n\n\n\nIt is inhomogeneous, since the right-hand side is not zero.\n\n\n\n\n\n\n\n\n\n\n\nTipAnswer 4\n\n\n\n\n\nHere, \\(A = 1, B = 2, C = 1\\).\n$ B^2 - 4AC = 2^2 - 4(1)(1) = 0 $.\nSo it is parabolic.\n\n\n\n\n\n\nSteady state\n\nWave-like motion\n\nDiffusion in time\n\n\n\n\n\n\n\nTipAnswer 5\n\n\n\n\n\n\nHeat equation ‚Üí (c) Diffusion in time\n\nWave equation ‚Üí (b) Wave-like motion\n\nLaplace‚Äôs equation ‚Üí (a) Steady state",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Level 2: Classification of PDEs</span>"
    ]
  },
  {
    "objectID": "chapters/level3_PDE_BCs.html",
    "href": "chapters/level3_PDE_BCs.html",
    "title": "4¬† Level 3: PDEs, their Physical Meaning, and Boundary Conditions",
    "section": "",
    "text": "4.1 Dirichlet Condition\nPavni: Acharya, PDEs still feel mysterious. What do they really mean?\nAcharya: Good question. PDEs describe how a quantity changes with respect to both time and space. Think of:\n- Heat spreading in a rod\n- Waves traveling along a string\n- Fluid flowing through a pipe\nAll of these involve rates of change in multiple directions, and that‚Äôs why PDEs come into play.\nPavni: So PDEs are the language of physics in extended domains?\nAcharya: Exactly. But to make their solutions unique and physically meaningful, we need boundary conditions. Let‚Äôs explore them one by one.\nAcharya: Dirichlet means fixing the value of the solution at the boundary.\nPavni: Like holding both ends of a rod at 100 ¬∞C?\nAcharya: Precisely. It represents physical situations where the boundary is controlled by an external source‚Äîlike contact with a thermostat.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Level 3: PDEs, their Physical Meaning, and Boundary Conditions</span>"
    ]
  },
  {
    "objectID": "chapters/level3_PDE_BCs.html#neumann-condition",
    "href": "chapters/level3_PDE_BCs.html#neumann-condition",
    "title": "4¬† Level 3: PDEs, their Physical Meaning, and Boundary Conditions",
    "section": "4.2 Neumann Condition",
    "text": "4.2 Neumann Condition\nAcharya: Neumann means fixing the derivative, often representing flux.\nPavni: So in the rod, saying no heat flows out means the temperature gradient at the end is zero?\nAcharya: Exactly. That‚Äôs an insulated boundary.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Level 3: PDEs, their Physical Meaning, and Boundary Conditions</span>"
    ]
  },
  {
    "objectID": "chapters/level3_PDE_BCs.html#robin-mixed-condition",
    "href": "chapters/level3_PDE_BCs.html#robin-mixed-condition",
    "title": "4¬† Level 3: PDEs, their Physical Meaning, and Boundary Conditions",
    "section": "4.3 Robin (Mixed) Condition",
    "text": "4.3 Robin (Mixed) Condition\nAcharya: Robin mixes the two:\n\\[\na u + b \\frac{\\partial u}{\\partial n} = c.\n\\]\nPavni: Is that like when heat escapes to the air?\nAcharya: Yes‚Äîconvective cooling. The flux depends on both the temperature at the boundary and the environment.\n\n\n\nüí° Quick Recap\n\n\nDirichlet ‚Üí Value fixed (e.g., temperature = 100 ¬∞C).\n\nNeumann ‚Üí Flux fixed (e.g., insulated boundary).\n\nRobin ‚Üí Combination (e.g., convective heat loss).\n\n\n\n\n4.3.1 üìù Mini-Quiz\n\nA vibrating string held fixed at both ends uses which boundary condition?\n\n\n\nAnswer\n\nDirichlet. The displacement of the string is zero at both ends.\n\nIf a wall is perfectly insulated, what type of boundary condition applies to temperature?\n\n\n\nAnswer\n\nNeumann. The derivative (temperature gradient) is zero, meaning no heat flux.\n\nWhich boundary condition models cooling of hot coffee in a room?\n\n\n\nAnswer\n\nRobin. Heat loss depends on both the coffee‚Äôs surface temperature and the room temperature (convection).\n\n\n\nPavni: Now I see it! PDEs tell the story inside the domain, and boundary conditions set the rules at the edges.\nAcharya: Well said. Together, they form the complete model of a physical system.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Level 3: PDEs, their Physical Meaning, and Boundary Conditions</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html",
    "href": "chapters/level4_finite_differences.html",
    "title": "5¬† Level 4: Finite Differences and the Heat Equation",
    "section": "",
    "text": "5.1 Application: The Heat Equation",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 4: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#application-the-heat-equation",
    "href": "chapters/level4_finite_differences.html#application-the-heat-equation",
    "title": "5¬† Level 4: Finite Differences and the Heat Equation",
    "section": "",
    "text": "Acharya: Consider the 1D heat equation: \\[\nu_t = \\alpha^2 u_{xx}^2, \\quad 0 &lt; x &lt; 1,\\; t&gt;0\n\\] with boundary conditions \\(u(0,t) = u(1,t) = 0\\) and initial profile \\(u(x,0) = f(x)\\).\nWe set up a grid: - In space: \\(x_i = i\\Delta x,\\; i=0,\\dots,N\\)\n- In time: \\(t^n = n\\Delta t,\\; n=0,1,2,\\dots\\)\nAt each point, let \\(u_i^n \\approx u(x_i,t^n)\\).\nPavni: And now we replace derivatives?\nAcharya: Correct.\n- Time derivative (forward difference): \\[\n  u_t(x_i,t^n) \\approx \\frac{u_i^{n+1} - u_i^n}{\\Delta t}\n  \\] - Spatial second derivative (central difference): \\[\n  u_{xx}(x_i,t^n) \\approx \\frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{(\\Delta x)^2}\n  \\]\nPlugging these into the PDE, we get: \\[\n\\frac{u_i^{n+1} - u_i^n}{\\Delta t} = \\alpha^2 \\,\\frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{(\\Delta x)^2}.\n\\]\nRearranging: \\[\nu_i^{n+1} = u_i^n + \\lambda\\,(u_{i-1}^n - 2u_i^n + u_{i+1}^n),\n\\] where \\(\\lambda = \\frac{\\alpha^2 \\Delta t}{(\\Delta x)^2}\\).",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 4: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#stability-condition",
    "href": "chapters/level4_finite_differences.html#stability-condition",
    "title": "5¬† Level 4: Finite Differences and the Heat Equation",
    "section": "5.2 Stability Condition",
    "text": "5.2 Stability Condition\n\nPavni: So we can just keep applying this formula to march forward in time?\nAcharya: Yes, but with a caveat. This scheme, called FTCS (Forward Time, Central Space), is only stable if: \\[\n\\lambda \\leq \\tfrac{1}{2}.\n\\]\nPavni: So if \\(\\Delta t\\) is too large, the scheme fails?\nAcharya: Exactly. The numerical solution will blow up, even though the true solution is stable. Choosing \\(\\Delta t\\) small enough ensures stability.\n\n\n\n\n\n\n\nNoteWhy the FTCS stability condition is \\(\\lambda \\leq \\tfrac{1}{2}\\)\n\n\n\n\n\nIf the update is \\[\nu^{(n+1)} = A u^{(n)},\n\\] and the initial error is \\(e^0\\), then after \\(n\\) steps the error is \\[\ne^{(n)} = A^n e^0.\n\\]\nUsing an induced matrix norm: \\[\n\\|e^{(n)}\\| = \\|A^n e^0\\| \\;\\le\\; \\|A^n\\|\\,\\|e^0\\|\n\\;\\le\\; \\|A\\|^n \\|e^0\\|.\n\\]\n\nIf \\(\\|A\\|\\le 1\\), the error never grows.\n\nIf \\(\\|A\\|&lt;1\\), the error decays as \\(n\\to\\infty\\).\n\nIn general, the asymptotic condition is that the spectral radius \\(\\rho(A)&lt;1\\).\n\n\n\n5.2.0.1 Eigenvalues of the FTCS matrix\nFor the FTCS tridiagonal matrix \\(A\\) (symmetric Toeplitz), the eigenvalues are \\[\n\\mu_k = 1 - 4 \\lambda \\,\\sin^2\\!\\left(\\frac{k\\pi}{2(N-1)}\\right),\n\\qquad k=1,2,\\dots,N-2,\n\\] where \\(\\lambda = \\dfrac{\\alpha^2 \\Delta t}{(\\Delta x)^2}\\).\nThus the spectral radius is \\[\n\\rho(A) = \\max_{1\\le k \\le N-2} \\big|\\mu_k\\big|\n= \\max_{1\\le k \\le N-2} \\left|1 - 4r \\sin^2\\!\\left(\\tfrac{k\\pi}{2(N-1)}\\right)\\right|.\n\\]\n\n\n\n5.2.0.2 Stability condition\n\nAs \\(N\\to\\infty\\) (i.e.¬†\\(\\Delta x \\to 0\\)), the maximum of \\(\\sin^2(\\cdot)\\) tends to \\(1\\).\n\nTherefore the most restrictive case is \\[\n|1 - 4 \\lambda| \\le 1.\n\\]\nThis simplifies to \\[\n0 \\;\\le\\; \\lambda \\;\\le\\; \\tfrac{1}{2}.\n\\]\n\n\n‚úÖ Thus, the FTCS scheme is stable if and only if \\[\n\\lambda = \\frac{\\alpha \\Delta t}{(\\Delta x)^2} \\;\\le\\; \\tfrac{1}{2}.\n\\]",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 4: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#mini-quizzes",
    "href": "chapters/level4_finite_differences.html#mini-quizzes",
    "title": "5¬† Level 4: Finite Differences and the Heat Equation",
    "section": "5.3 Mini-Quizzes",
    "text": "5.3 Mini-Quizzes\n\nQuiz 1:\nLet \\(u(x) = x^2\\). With \\(\\Delta x = 0.1\\), approximate \\(u'(1)\\) using:\n1. Forward difference\n2. Central difference\nCompare with the exact derivative \\(u'(1) = 2\\). Which is more accurate?\n\n\n\n\n\n\n\nTipAnswer 1\n\n\n\n\n\n\nForward difference: \\[\n\\frac{u(1+\\Delta x)-u(1)}{\\Delta x}=\\frac{(1.1)^2-1^2}{0.1}=\\frac{1.21-1}{0.1}=2.1.\n\\]\nCentral difference: \\[\n\\frac{u(1+\\Delta x)-u(1-\\Delta x)}{2\\Delta x}\n=\\frac{(1.1)^2-(0.9)^2}{0.2}=\\frac{1.21-0.81}{0.2}=2.0.\n\\]\nExact derivative: \\(u'(1)=2\\).\n\nConclusion: The central difference gives the exact value here (error \\(0\\)), while the forward difference has error \\(0.1\\). Central is more accurate (as expected ‚Äî it is second-order).\n\n\n\n\n\nQuiz 2:\nSuppose \\(\\alpha = 1\\), \\(\\Delta x = 0.1\\). What is the maximum \\(\\Delta t\\) for stability in the explicit scheme?\n(Hint: \\(\\lambda = \\dfrac{\\alpha \\Delta t}{(\\Delta x)^2} \\leq \\tfrac{1}{2}\\).)\n\n\n\n\n\n\n\nTipAnswer 2\n\n\n\n\n\nWe need \\[\n\\lambda=\\frac{\\alpha\\,\\Delta t}{(\\Delta x)^2}\\le\\frac{1}{2}.\n\\] With \\(\\alpha=1\\) and \\(\\Delta x=0.1\\), \\((\\Delta x)^2=0.01\\). So \\[\n\\frac{\\Delta t}{0.01}\\le\\frac{1}{2}\\quad\\Rightarrow\\quad\n\\Delta t \\le 0.01\\times\\frac{1}{2}=0.005.\n\\]\nMaximum allowable \\(\\displaystyle \\Delta t = 0.005\\).",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 4: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#heat-equation-matrix-method-with-non-zero-dirichlet-conditions",
    "href": "chapters/level4_finite_differences.html#heat-equation-matrix-method-with-non-zero-dirichlet-conditions",
    "title": "5¬† Level 4: Finite Differences and the Heat Equation",
    "section": "5.4 Heat equation ‚Äî Matrix Method with Non-zero Dirichlet Conditions",
    "text": "5.4 Heat equation ‚Äî Matrix Method with Non-zero Dirichlet Conditions\n\nPavni: We already saw how to discretize the heat equation with FTCS. But can we write the whole scheme in a more compact way?\nAcharya: Yes. That‚Äôs where the matrix method comes in. Let‚Äôs recall the PDE: \\[\nu_t = \\alpha^2 u_{xx}, \\quad 0 &lt; x &lt; 1, \\; t &gt; 0,\n\\] with Dirichlet conditions \\[\nu(0,t) = L, \\qquad u(1,t) = R,\n\\] and initial condition \\(u(x,0)=f(x)\\).\nPavni: So we still set up the grid in space and time?\nAcharya: Exactly. The FTCS update at interior nodes is \\[\nu_i^{j+1} = u_i^j + \\lambda \\,(u_{i-1}^j - 2u_i^j + u_{i+1}^j),\n\\quad i=1,\\dots,N_x-2,\n\\] where \\(\\lambda = \\tfrac{\\alpha^2 \\Delta t}{\\Delta x^2}\\).\nPavni: That‚Äôs a lot of coupled equations. How do we collect them?\nAcharya: We put all interior values into a vector \\[\nu^{(j)} =\n\\begin{bmatrix}\nu_1^j \\\\\nu_2^j \\\\\n\\vdots \\\\\nu_{N_x-2}^j\n\\end{bmatrix}.\n\\]\nPavni: And the update rule becomes a matrix multiplication?\nAcharya: Yes. We can write \\[\nu^{(j+1)} = A\\,u^{(j)} + b,\n\\] where \\(A\\) is tridiagonal and \\(b\\) accounts for the boundary conditions: \\[\nA =\n\\begin{bmatrix}\n1-2\\lambda & \\lambda     &        &        &   \\\\\n\\lambda     & 1-2\\lambda & \\lambda      &        &   \\\\\n      & \\ddots & \\ddots & \\ddots &   \\\\\n      &        & \\lambda      & 1-2\\lambda   & \\lambda \\\\\n      &        &        & \\lambda      & 1-2\\lambda\n\\end{bmatrix}, \\qquad\nb =\n\\begin{bmatrix}\n\\lambda L \\\\\n0 \\\\\n\\vdots \\\\\n0 \\\\\n\\lambda R\n\\end{bmatrix}.\n\\]\nPavni: So if \\(L=R=0\\), then \\(b=0\\) and we just have \\(u^{(j+1)} = A u^{(j)}\\).\nAcharya: Precisely. That‚Äôs the beauty of the matrix method: it organizes the scheme into a linear algebra update.\n\n\n\n5.4.1 Implementation in Python\nLet us now implement the method in Python and compare with the exact solution for \\(f(x)=\\sin(\\pi x)\\): \\[\nu(x,t) = e^{-\\pi^2 \\alpha t}\\,\\sin(\\pi x).\n\\]\n\n\n\n\n\n\n\n\n\n\n\n\n5.4.2 Remarks\n\nThe linear algebra structure \\(u^{(j+1)} = A u^{(j)} + b\\) makes the scheme compact and systematic.\n\nThe stability restriction \\(\\lambda \\leq \\tfrac{1}{2}\\) follows from analyzing the eigenvalues of \\(A\\).\n\nFor large \\(N_x\\), \\(A\\) is sparse and tridiagonal ‚Äî in practice, use scipy.sparse.diags for efficiency.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 4: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#backward-difference-implicit-scheme-for-the-heat-equation",
    "href": "chapters/level4_finite_differences.html#backward-difference-implicit-scheme-for-the-heat-equation",
    "title": "5¬† Level 4: Finite Differences and the Heat Equation",
    "section": "5.5 Backward Difference (Implicit) Scheme for the Heat Equation",
    "text": "5.5 Backward Difference (Implicit) Scheme for the Heat Equation\n\nPavni: Acharya, the FTCS scheme works only if \\(\\lambda \\leq \\tfrac{1}{2}\\). Is there a method that avoids this restriction?\nAcharya: Yes. We can use a backward difference in time, together with the same central difference in space. This gives the Backward Euler scheme, which is implicit but unconditionally stable.\nPavni: Implicit? What does that mean?\nAcharya: It means that the new values \\(u^{n+1}\\) appear on both sides of the equation, so we must solve a system of equations at each time step.\n\n\n\n5.5.1 Derivation\nStart from the PDE: \\[\nu_t = \\alpha^2 u_{xx}.\n\\]\n\nApproximate the time derivative with a backward difference: \\[\nu_t(x_i,t^{n+1}) \\;\\approx\\; \\frac{u_i^{\\,n+1} - u_i^{\\,n}}{\\Delta t}.\n\\]\nApproximate the spatial second derivative at the new time level: \\[\nu_{xx}(x_i,t^{n+1}) \\;\\approx\\; \\frac{u_{i-1}^{\\,n+1} - 2u_i^{\\,n+1} + u_{i+1}^{\\,n+1}}{(\\Delta x)^2}.\n\\]\n\nThe scheme becomes: \\[\n\\frac{u_i^{\\,n+1} - u_i^{\\,n}}{\\Delta t}\n= \\alpha^2 \\,\\frac{u_{i-1}^{\\,n+1} - 2u_i^{\\,n+1} + u_{i+1}^{\\,n+1}}{(\\Delta x)^2}.\n\\]\nRearrange: \\[\n- \\lambda\\, u_{i-1}^{\\,n+1} + (1+2\\lambda)\\,u_i^{\\,n+1} - \\lambda\\, u_{i+1}^{\\,n+1} = u_i^{\\,n},\n\\qquad\n\\lambda = \\frac{\\alpha^2 \\Delta t}{(\\Delta x)^2}.\n\\]\n\n\n\n5.5.2 Matrix Form\nLet \\(u^{(n)}\\) be the vector of interior values at time step \\(n\\). Then \\[\nB u^{(n+1)} = u^{(n)},\n\\] where \\[\nB =\n\\begin{bmatrix}\n1+2\\lambda & -\\lambda     &            &            &   \\\\\n-\\lambda    & 1+2\\lambda  & -\\lambda   &            &   \\\\\n            & \\ddots      & \\ddots     & \\ddots     &   \\\\\n            &             & -\\lambda   & 1+2\\lambda & -\\lambda \\\\\n            &             &            & -\\lambda   & 1+2\\lambda\n\\end{bmatrix}_{(N_x-2)\\times(N_x-2)}.\n\\]\nSo each step requires solving the linear system \\[\nu^{(n+1)} = B^{-1} u^{(n)}.\n\\]\n\n\n\n5.5.3 Stability\n\nPavni: Doesn‚Äôt that make it more expensive than FTCS?\nAcharya: It does, because we must solve a tridiagonal system at every time step.\nBut the reward is unconditional stability: for any \\(\\Delta t &gt; 0\\) and \\(\\Delta x &gt; 0\\), the scheme does not blow up.\nPavni: So no restriction like \\(\\lambda \\leq \\tfrac{1}{2}\\)?\nAcharya: Exactly. Backward Euler is stable for all \\(\\lambda\\).\nIt is only first-order accurate in time (like FTCS), but still second-order in space.\n\n\n\n\n5.5.4 Remarks\n\nBackward Euler is more robust but requires solving a linear system at each step.\n\nFor large systems, efficient algorithms like the Thomas algorithm (specialized Gaussian elimination for tridiagonal matrices) are used.\n\nIn practice, one balances cost (explicit FTCS, cheap but conditionally stable) against robustness (implicit Backward Euler, unconditionally stable).\n\n\n\n\n\n\n\nNoteWhy the Backward Euler scheme is unconditionally stable\n\n\n\n\n\nIf the update is\n\\[\nu^{(n+1)} = A u^{(n)},\n\\]\nand the initial error is \\(e^0\\), then after \\(n\\) steps the error is\n\\[\ne^{(n)} = A^n e^0.\n\\]\nAs before, the asymptotic condition is that the spectral radius \\(\\rho(A)&lt;1\\).\n\n\n5.5.4.1 Eigenvalues of the Backward Euler iteration matrix\nThe Backward Euler scheme for the heat equation is\n\\[\n\\frac{U^{n+1} - U^n}{\\Delta t} = \\alpha^2 A U^{n+1},\n\\] which rearranges to\n\\[\nU^{n+1} = (I - \\lambda A)^{-1} U^n,\n\\qquad \\lambda = \\frac{\\alpha^2 \\Delta t}{(\\Delta x)^2}.\n\\]\n\nIf \\(\\lambda_i(A)\\) are the eigenvalues of the discrete Laplacian \\(A\\),\nthen the eigenvalues of the iteration matrix are \\[\n\\mu_i = \\frac{1}{1 - \\lambda_i(A)}.\n\\]\nFor the 1D Laplacian with Dirichlet BCs, \\[\n\\lambda_i(A) = -4 \\sin^2\\!\\left(\\frac{i\\pi}{2m}\\right),\n\\qquad i=1,2,\\dots,m-1.\n\\]\n\nThus \\[\n\\mu_i = \\frac{1}{1 + 4\\lambda \\sin^2\\!\\left(\\frac{i\\pi}{2m}\\right)}.\n\\]\n\n\n\n5.5.4.2 Stability condition\n\nSince \\(\\lambda&gt;0\\) and \\(\\sin^2(\\cdot)\\ge0\\),\nthe denominator is always greater than \\(1\\).\n\nTherefore \\[\n0 &lt; \\mu_i &lt; 1, \\qquad \\forall i.\n\\]\n\nThis means all eigenvalues of the iteration matrix lie strictly inside the unit circle.\n\n‚úÖ Thus, the Backward Euler scheme is unconditionally stable: - No restriction on \\(\\Delta t\\).\n- Every mode decays monotonically.\n- In contrast, FTCS required \\(\\lambda \\le \\tfrac{1}{2}\\) for stability.\n\n\n\n\n\n\n5.5.5 Interactive plots to see the eigenvalues of FTCS and Backward Differencce methods\n\n\n                            \n                                            \n\n\n                            \n                                            \n\n\n\nHow to interact with the plots - Move the slider to change \\(\\lambda = \\tfrac{\\alpha^2 \\Delta t}{(\\Delta x)^2}\\).\n- FTCS plot: notice that for \\(\\lambda &gt; 0.5\\) some eigenvalues leave \\([-1,1]\\), indicating instability.\n- Backward Euler plot: eigenvalues always remain in \\((0,1)\\), showing unconditional stability.\n- Hover over points to see their values, zoom by dragging, double-click to reset.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 4: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level5_Wave_Equation.html",
    "href": "chapters/level5_Wave_Equation.html",
    "title": "6¬† Level 5 ‚Äî Hyperbolic PDEs: Wave Equation",
    "section": "",
    "text": "6.1 üöó The Traffic Flow Model\nPavni: Acharya, we‚Äôve studied the heat equation. From theory we know that it seems to spread information everywhere. Does every PDE behave like that?\nAcharya: That‚Äôs a good observation, Pavni. Not every PDE diffuses information infinitely fast like the parabolic heat equation.\nSome equations describe situations where information or disturbances travel at a finite speed ‚Äî like waves or moving traffic.\nPavni: So these are called hyperbolic equations?\nAcharya: Exactly. Hyperbolic equations are the mathematical way of describing signals or quantities that move through a medium rather than diffuse.\nFor example ‚Äî a vibrating string, sound waves in air, or even cars moving on a road.\nPavni: Interesting! But why are they so different from diffusion equations like the heat equation?\nAcharya: Because diffusion equations allow disturbances to spread instantaneously everywhere ‚Äî a small change at one point affects all others immediately.\nThat‚Äôs called infinite propagation speed.\nBut hyperbolic equations restrict influence to certain paths in the \\((x,t)\\)-plane, called characteristics.\nInformation travels only along these paths at a finite speed.\nPavni: That sounds more physical. After all, signals, sound, or cars don‚Äôt move infinitely fast!\nAcharya: Exactly. Let‚Äôs begin with a simple and familiar example ‚Äî traffic flow.\nIt beautifully captures the idea of conservation and finite-speed motion.\nPavni: So, where do we begin?\nAcharya: Let‚Äôs define some quantities.\nPavni: So \\(q\\) must depend on both how many cars there are and how fast they move?\nAcharya: Precisely. That leads us to the simple physical relation: \\[\nq = \\rho v.\n\\]",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Level 5 ‚Äî Hyperbolic PDEs: Wave Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level5_Wave_Equation.html#the-traffic-flow-model",
    "href": "chapters/level5_Wave_Equation.html#the-traffic-flow-model",
    "title": "6¬† Level 5 ‚Äî Hyperbolic PDEs: Wave Equation",
    "section": "",
    "text": "\\(\\rho(x,t)\\): density of cars at position \\(x\\) and time \\(t\\) (cars/km)\n\n\\(v(x,t)\\): average speed of cars (km/h)\n\n\\(q(x,t)\\): flow rate ‚Äî number of cars passing a point per unit time (cars/hour)\n\n\n\n\n\nüí° Why \\(q = \\rho v\\)?\n\nIf a small segment of road of length \\(\\Delta x\\) contains \\(\\rho \\, \\Delta x\\) cars,\nand each car moves with velocity \\(v\\), then in time \\(\\Delta t\\) each car covers \\(v \\, \\Delta t\\) km.\nSo, the number of cars passing a fixed point in time \\(\\Delta t\\) is\n\\[\n(\\rho \\, \\Delta x) \\cdot \\frac{v \\, \\Delta t}{\\Delta x} = \\rho v \\, \\Delta t.\n\\] Dividing by \\(\\Delta t\\) gives \\(q = \\rho v\\).",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Level 5 ‚Äî Hyperbolic PDEs: Wave Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level5_Wave_Equation.html#conservation-of-cars",
    "href": "chapters/level5_Wave_Equation.html#conservation-of-cars",
    "title": "6¬† Level 5 ‚Äî Hyperbolic PDEs: Wave Equation",
    "section": "6.2 ‚öôÔ∏è Conservation of Cars",
    "text": "6.2 ‚öôÔ∏è Conservation of Cars\nAcharya: Now, think of a small stretch of road between \\(x_1\\) and \\(x_2\\).\nCars can only leave or enter through the ends.\n\\[\n\\frac{d}{dt}\\int_{x_1}^{x_2} \\rho(x,t)\\,dx = q(x_1,t) - q(x_2,t).\n\\]\nPavni: That looks like conservation of mass!\nAcharya: Exactly ‚Äî just conservation of the number of cars.\nThe total number of cars in the interval changes only because of the net flow at the boundaries.\nNow, let‚Äôs use the Fundamental Theorem of Calculus to convert this integral form into a local differential equation.\nBy the Fundamental Theorem of Calculus, \\[\nq(x_2,t) - q(x_1,t) = \\int_{x_1}^{x_2} q_x(x,t)\\,dx.\n\\]\nSubstitute this into our conservation statement: \\[\n\\frac{d}{dt}\\int_{x_1}^{x_2} \\rho(x,t)\\,dx = -\\int_{x_1}^{x_2} q_x(x,t)\\,dx.\n\\] Assuming \\(\\rho\\) is smooth enough to interchange differentiation and integration: \\[\n\\int_{x_1}^{x_2} \\rho_t(x,t)\\,dx = -\\int_{x_1}^{x_2} q_x(x,t)\\,dx.\n\\]\nCombine both integrals: \\[\n\\int_{x_1}^{x_2} \\big[\\rho_t(x,t) + q_x(x,t)\\big]\\,dx = 0.\n\\]\nAcharya: Now, Pavni, what does this equation tell us?\nPavni: It says that the integral of \\(\\rho_t + q_x\\) over any interval is zero.\nAcharya: Exactly! And that can only happen if the integrand itself is zero everywhere.\nHence, we get the local conservation law: \\[\n\\boxed{\\rho_t + q_x = 0.}\n\\]\nPavni: So the integral form expresses the total number of cars in a segment being conserved,\nand this differential form expresses that conservation at every point on the road!\nAcharya: Perfectly said. This is the basic conservation law for one-dimensional flow.\nNext, if we assume each car moves at a constant speed \\(a\\), we‚Äôll get the linear advection equation.\nPavni: So this describes a traffic pattern moving forward without changing its shape?\nAcharya: Exactly. The entire profile of car density just shifts rightward with speed \\(a\\).",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Level 5 ‚Äî Hyperbolic PDEs: Wave Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level5_Wave_Equation.html#try-to-predict",
    "href": "chapters/level5_Wave_Equation.html#try-to-predict",
    "title": "6¬† Level 5 ‚Äî Hyperbolic PDEs: Wave Equation",
    "section": "6.3 ‚úèÔ∏è Try to Predict",
    "text": "6.3 ‚úèÔ∏è Try to Predict\nAcharya: Before solving it, can you guess how the density will evolve if initially the density is a bump ‚Äî say, \\[\n\\rho(x,0) = e^{-x^2}?\n\\]\nPavni: I think it will move to the right, keeping its shape.\nAcharya: Perfect intuition. We‚Äôll now confirm this mathematically using characteristics ‚Äî special curves along which information travels.",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Level 5 ‚Äî Hyperbolic PDEs: Wave Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level5_Wave_Equation.html#characteristics-and-the-solution-of-the-linear-advection-equation",
    "href": "chapters/level5_Wave_Equation.html#characteristics-and-the-solution-of-the-linear-advection-equation",
    "title": "6¬† Level 5 ‚Äî Hyperbolic PDEs: Wave Equation",
    "section": "6.4 üåä Characteristics and the Solution of the Linear Advection Equation",
    "text": "6.4 üåä Characteristics and the Solution of the Linear Advection Equation\nPavni: Acharya, now that we have derived the equation\n\\[\n\\rho_t + a\\rho_x = 0, \\quad a &gt; 0,\n\\]\nfor cars moving at constant speed, how do we actually find \\(\\rho(x,t)\\) from this?\nAcharya: Excellent question. This equation may look simple, but it contains a beautiful idea ‚Äî that information travels along certain paths in the \\((x,t)\\)-plane. These paths are called characteristics.\n\n\n6.4.1 Deriving the Characteristic Curves\nAcharya: Let‚Äôs think of \\(\\rho\\) as a function of both \\(x\\) and \\(t\\).\nSuppose we move along a curve \\(x = x(t)\\) in the \\((x,t)\\)-plane.\nBy the chain rule, the total derivative of \\(\\rho\\) along that curve is \\[\n\\frac{d\\rho}{dt} = \\rho_t + \\frac{dx}{dt}\\rho_x.\n\\]\nNow, if we choose \\(\\dfrac{dx}{dt} = a\\), then \\[\n\\frac{d\\rho}{dt} = \\rho_t + a\\rho_x = 0.\n\\]\nThat means \\(\\rho\\) is constant along any curve that satisfies \\(\\dfrac{dx}{dt} = a\\).\nPavni: So those are the characteristic curves?\nAcharya: Exactly! Integrating \\(\\dfrac{dx}{dt} = a\\) gives \\[\nx = a t + x_0, \\quad \\text{or} \\quad x - a t = x_0 = \\text{constant}.\n\\]\nEach line \\(x - a t = \\text{constant}\\) is a characteristic line.\n\n\n\n6.4.2 The Meaning of Characteristics\nPavni: What does it mean that \\(\\rho\\) is constant along these lines?\nAcharya: It means that the value of \\(\\rho\\) at time \\(t\\) and position \\(x\\)\nis exactly the same as its value at the point where that characteristic line started on the \\(x\\)-axis (that is, at time \\(t=0\\)).\nSo, \\[\n\\rho(x,t) = \\rho_0(x - a t),\n\\] where \\(\\rho_0(x)\\) is the initial density at \\(t=0\\).\nPavni: Oh! So the initial profile just shifts by \\(a t\\)?\nAcharya: Exactly ‚Äî it moves to the right if \\(a&gt;0\\) and to the left if \\(a&lt;0\\).\nNo change in shape ‚Äî pure translation.\n\n\n\n6.4.3 Verifying the Solution\nPavni: Let‚Äôs check if this really satisfies the PDE.\nAcharya: Sure! Let \\(\\rho(x,t) = \\rho_0(x - a t)\\).\nThen \\[\n\\rho_t = -a\\rho_0'(x - a t), \\quad \\rho_x = \\rho_0'(x - a t).\n\\] Substitute into \\(\\rho_t + a\\rho_x = 0\\): \\[\n(-a\\rho_0') + a\\rho_0' = 0.\n\\] ‚úÖ It satisfies the equation perfectly.\n\n\n\n6.4.4 Understanding Finite Propagation Speed\nAcharya: The key property of this equation is that information moves at a finite speed.\nIf a disturbance is initially present only between \\(x=0\\) and \\(x=1\\),\nthen at time \\(t\\) it will be found only between \\(x=a t\\) and \\(x=1+a t\\).\nEvery point outside this region remains unaffected.\nPavni: So information doesn‚Äôt spread instantly like in the heat equation?\nAcharya: Exactly. In the heat equation, even a small bump affects the whole line immediately ‚Äî infinite propagation speed.\nBut here, the influence travels only along straight lines \\(x - a t = \\text{constant}\\) ‚Äî that‚Äôs finite-speed propagation.\n\n\n\n6.4.5 Example\nLet‚Äôs take an initial density \\[\n\\rho_0(x) =\n\\begin{cases}\n1, & 0 &lt; x &lt; 1, \\\\\n0, & \\text{otherwise}.\n\\end{cases}\n\\]\nThen \\[\n\\rho(x,t) =\n\\begin{cases}\n1, & a t &lt; x &lt; 1 + a t, \\\\\n0, & \\text{otherwise}.\n\\end{cases}\n\\]\nPavni: So the block of cars just moves forward as a group?\nAcharya: Exactly ‚Äî like a moving traffic wave with constant shape.\n\n\n\n6.4.6 Visualizing Characteristics\nEach characteristic line shows where information travels:\nt ‚Üë\n  |\n  |       /    /    /    /    /    /    /\n  |      /    /    /    /    /    /    /\n  |     /    /    /    /    /    /    /\n  |____/____/____/____/____/____/____/‚Üí x",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Level 5 ‚Äî Hyperbolic PDEs: Wave Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level5_Wave_Equation.html#domain-of-dependence-and-domain-of-influence",
    "href": "chapters/level5_Wave_Equation.html#domain-of-dependence-and-domain-of-influence",
    "title": "6¬† Level 5 ‚Äî Hyperbolic PDEs: Wave Equation",
    "section": "6.5 üï∏Ô∏è Domain of Dependence and Domain of Influence",
    "text": "6.5 üï∏Ô∏è Domain of Dependence and Domain of Influence\nPavni: Acharya, you mentioned earlier that information in hyperbolic equations travels along characteristics. But how exactly do we describe which parts of the initial data influence the solution at a given point?\nAcharya: Excellent question, Pavni. To answer that, we introduce two key ideas ‚Äî the domain of dependence and the domain of influence. These describe how information moves through space and time.\n\n\n6.5.1 What do these mean?\nAcharya: Let‚Äôs begin intuitively.\n\nThe domain of dependence (DoD) of a point \\((x,t)\\) is the set of points in the initial data that can affect the solution at \\((x,t)\\).\nIn other words: Which initial points influence the value here?\nThe domain of influence (DoI) of a point \\((x_0,0)\\) is the set of space‚Äìtime points \\((x,t)\\) that can be affected by that initial point.\nIn other words: Where does the information starting at \\(x_0\\) go?\n\nPavni: So the DoD looks backward in time, and the DoI looks forward?\nAcharya: Exactly. They‚Äôre like mirror images of each other.\nFor hyperbolic PDEs, these regions are bounded by characteristics ‚Äî the paths along which information travels at finite speed.\n\n\n\n6.5.2 Example 1: Linear Advection\nPavni: Let‚Äôs try this with the advection equation again:\n\\[\nu_t + a\\,u_x = 0, \\quad u(x,0) = u_0(x).\n\\]\nAcharya: Good. The characteristics are the straight lines \\[\nx - a t = \\text{constant}.\n\\]\nSo each point \\((x,t)\\) connects to exactly one point on the \\(x\\)‚Äìaxis: \\(x_0 = x - a t\\).\nPavni: So the value \\(u(x,t)\\) depends only on \\(u_0(x - a t)\\)?\nAcharya: Exactly. That means:\n\nThe domain of dependence of \\((x,t)\\) is the single point \\(x_0 = x - a t\\).\n\nThe domain of influence of an initial point \\((x_0,0)\\) is the straight line \\(x = x_0 + a t\\).\n\nPavni: So for advection, both DoD and DoI are just lines ‚Äî not regions?\nAcharya: Right. A single characteristic line carries all the information.\nThis is why the advection equation has such a clean propagation behavior ‚Äî each point of initial data simply moves at speed \\(a\\) without interacting with others.\n\n\n\n6.5.3 Example 2: The 1-D Wave Equation\nPavni: What happens for the wave equation?\n\\[\nu_{tt} = c^2 u_{xx}.\n\\]\nAcharya: Ah, this one is a bit richer. The general solution is given by d‚ÄôAlembert‚Äôs formula: \\[\nu(x,t) = F(x - c t) + G(x + c t).\n\\]\nPavni: So now we have two families of characteristics ‚Äî one moving right, one left?\nAcharya: Precisely! For this equation: - Right-moving characteristics: \\(x - c t = \\text{constant}\\)\n- Left-moving characteristics: \\(x + c t = \\text{constant}\\)\nNow, to find the value at \\((x,t)\\), you need both \\(F\\) and \\(G\\) ‚Äî meaning information from two points on the initial line: \\[\nx - c t \\quad \\text{and} \\quad x + c t.\n\\]\nPavni: So the DoD of \\((x,t)\\) is the interval between those two points?\nAcharya: Yes. The domain of dependence is\n\\[\n[x - c t,\\, x + c t].\n\\] And the domain of influence of an initial point \\((x_0,0)\\) is the cone-shaped region",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Level 5 ‚Äî Hyperbolic PDEs: Wave Equation</span>"
    ]
  }
]