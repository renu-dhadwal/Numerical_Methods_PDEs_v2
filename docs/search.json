[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Numerical Methods for PDEs: An Interactive Journey",
    "section": "",
    "text": "0.1 title: ‚ÄúNumerical Methods for PDEs: An Interactive Journey‚Äù",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>title: \"Numerical Methods for PDEs: An Interactive Journey\"</span>"
    ]
  },
  {
    "objectID": "index.html#levels",
    "href": "index.html#levels",
    "title": "Numerical Methods for PDEs: An Interactive Journey",
    "section": "1.1 Levels",
    "text": "1.1 Levels\n\nLevel 1: Origins of PDEs\nLevel 2: Classification of PDEs\nLevel 3: Physical Interpretation and boundary conditions\nLevel 4: Finite Difference Methods- Introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>title: \"Numerical Methods for PDEs: An Interactive Journey\"</span>"
    ]
  },
  {
    "objectID": "chapters/level1_history_pdes.html",
    "href": "chapters/level1_history_pdes.html",
    "title": "2¬† Level 1: A Historical Glimpse of PDEs",
    "section": "",
    "text": "Pavni: Acharya, where did all these partial differential equations come from? They seem so abstract.\nAcharya: Ah, Pavni, they did not begin in abstraction. They began with strings, heat, and the mysteries of the heavens.\nPavni: Strings? You mean music?\nAcharya: Exactly! In 1746, d‚ÄôAlembert studied how a vibrating string produces sound. From that, he wrote down the wave equation. Soon after, Euler extended it to drums and membranes. So you see, music and mathematics are deeply connected.\nPavni: That‚Äôs beautiful! And the heat equation?\nAcharya: That came from Joseph Fourier in the early 1800s. He asked: How does heat spread through a solid body? His answer was the heat equation, and in solving it he gave us the gift of Fourier series.\nPavni: So Fourier series were born from studying heat?\nAcharya: Precisely. And then Laplace studied gravitational attraction and derived the Laplace equation, describing potentials in physics. Poisson later generalized it with the Poisson equation, where sources appear inside the field.\nPavni: So each new equation came from a real phenomenon.\nAcharya: Just so. Later, in the 19th century, Navier and Stokes wrote down the equations of fluid motion ‚Äî the Navier‚ÄìStokes equations. Even today, their mysteries are not fully solved.\nPavni: (smiling) So PDEs are not just formulas on paper. They are echoes of sound, flows of heat, gravity, and water.\nAcharya: Well said, Pavni. They are the language by which nature speaks to us.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Level 1: A Historical Glimpse of PDEs</span>"
    ]
  },
  {
    "objectID": "chapters/level2_classification_pdes.html",
    "href": "chapters/level2_classification_pdes.html",
    "title": "3¬† Level 2: Classification of PDEs",
    "section": "",
    "text": "3.1 Mini Quizzes\nQuiz 1: Identify the order\nWhich of the following is a second-order PDE?\n1. $ u_t + cu_x = 0 $\n2. $ u_t = u_{xx} $\n3. $ u u_x = 0 $\nQuiz 2: Linearity check\nWhich PDE is nonlinear?\n1. $ u_t = u_{xx} $\n2. $ u_t + u u_x = 0 $\nQuiz 3: Homogeneous or inhomogeneous\nClassify: $ u_{xx} + u_{yy} = f(x,y) $.\nQuiz 4: Type of second-order PDE\nFor $ u_{xx} + 2u_{xy} + u_{yy} = 0 $, compute $ B^2 - 4AC $. What type is it?\nQuiz 5: Physical meaning\nMatch each equation with its physical interpretation:\n- Heat equation\n- Wave equation\n- Laplace‚Äôs equation",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Level 2: Classification of PDEs</span>"
    ]
  },
  {
    "objectID": "chapters/level2_classification_pdes.html#mini-quizzes",
    "href": "chapters/level2_classification_pdes.html#mini-quizzes",
    "title": "3¬† Level 2: Classification of PDEs",
    "section": "",
    "text": "TipAnswer 1\n\n\n\n\n\nEquation (2) $ u_t = u_{xx} $ is second-order because of the \\(u_{xx}\\) term.\n\n\n\n\n\n\n\n\n\n\n\nTipAnswer 2\n\n\n\n\n\nEquation (2) is nonlinear because of the product term \\(u u_x\\).\n\n\n\n\n\n\n\n\n\n\n\nTipAnswer 3\n\n\n\n\n\nIt is inhomogeneous, since the right-hand side is not zero.\n\n\n\n\n\n\n\n\n\n\n\nTipAnswer 4\n\n\n\n\n\nHere, \\(A = 1, B = 2, C = 1\\).\n$ B^2 - 4AC = 2^2 - 4(1)(1) = 0 $.\nSo it is parabolic.\n\n\n\n\n\n\nSteady state\n\nWave-like motion\n\nDiffusion in time\n\n\n\n\n\n\n\nTipAnswer 5\n\n\n\n\n\n\nHeat equation ‚Üí (c) Diffusion in time\n\nWave equation ‚Üí (b) Wave-like motion\n\nLaplace‚Äôs equation ‚Üí (a) Steady state",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Level 2: Classification of PDEs</span>"
    ]
  },
  {
    "objectID": "chapters/level3_PDE_BCs.html",
    "href": "chapters/level3_PDE_BCs.html",
    "title": "4¬† Level 3: PDEs, their Physical Meaning, and Boundary Conditions",
    "section": "",
    "text": "4.1 Dirichlet Condition\nPavni: Acharya, PDEs still feel mysterious. What do they really mean?\nAcharya: Good question. PDEs describe how a quantity changes with respect to both time and space. Think of:\n- Heat spreading in a rod\n- Waves traveling along a string\n- Fluid flowing through a pipe\nAll of these involve rates of change in multiple directions, and that‚Äôs why PDEs come into play.\nPavni: So PDEs are the language of physics in extended domains?\nAcharya: Exactly. But to make their solutions unique and physically meaningful, we need boundary conditions. Let‚Äôs explore them one by one.\nAcharya: Dirichlet means fixing the value of the solution at the boundary.\nPavni: Like holding both ends of a rod at 100 ¬∞C?\nAcharya: Precisely. It represents physical situations where the boundary is controlled by an external source‚Äîlike contact with a thermostat.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Level 3: PDEs, their Physical Meaning, and Boundary Conditions</span>"
    ]
  },
  {
    "objectID": "chapters/level3_PDE_BCs.html#neumann-condition",
    "href": "chapters/level3_PDE_BCs.html#neumann-condition",
    "title": "4¬† Level 3: PDEs, their Physical Meaning, and Boundary Conditions",
    "section": "4.2 Neumann Condition",
    "text": "4.2 Neumann Condition\nAcharya: Neumann means fixing the derivative, often representing flux.\nPavni: So in the rod, saying no heat flows out means the temperature gradient at the end is zero?\nAcharya: Exactly. That‚Äôs an insulated boundary.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Level 3: PDEs, their Physical Meaning, and Boundary Conditions</span>"
    ]
  },
  {
    "objectID": "chapters/level3_PDE_BCs.html#robin-mixed-condition",
    "href": "chapters/level3_PDE_BCs.html#robin-mixed-condition",
    "title": "4¬† Level 3: PDEs, their Physical Meaning, and Boundary Conditions",
    "section": "4.3 Robin (Mixed) Condition",
    "text": "4.3 Robin (Mixed) Condition\nAcharya: Robin mixes the two:\n\\[\na u + b \\frac{\\partial u}{\\partial n} = c.\n\\]\nPavni: Is that like when heat escapes to the air?\nAcharya: Yes‚Äîconvective cooling. The flux depends on both the temperature at the boundary and the environment.\n\n\n\nüí° Quick Recap\n\n\nDirichlet ‚Üí Value fixed (e.g., temperature = 100 ¬∞C).\n\nNeumann ‚Üí Flux fixed (e.g., insulated boundary).\n\nRobin ‚Üí Combination (e.g., convective heat loss).\n\n\n\n\n4.3.1 üìù Mini-Quiz\n\nA vibrating string held fixed at both ends uses which boundary condition?\n\n\n\nAnswer\n\nDirichlet. The displacement of the string is zero at both ends.\n\nIf a wall is perfectly insulated, what type of boundary condition applies to temperature?\n\n\n\nAnswer\n\nNeumann. The derivative (temperature gradient) is zero, meaning no heat flux.\n\nWhich boundary condition models cooling of hot coffee in a room?\n\n\n\nAnswer\n\nRobin. Heat loss depends on both the coffee‚Äôs surface temperature and the room temperature (convection).\n\n\n\nPavni: Now I see it! PDEs tell the story inside the domain, and boundary conditions set the rules at the edges.\nAcharya: Well said. Together, they form the complete model of a physical system.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Level 3: PDEs, their Physical Meaning, and Boundary Conditions</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html",
    "href": "chapters/level4_finite_differences.html",
    "title": "5¬† Level 3: Finite Differences and the Heat Equation",
    "section": "",
    "text": "5.1 Application: The Heat Equation",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 3: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#application-the-heat-equation",
    "href": "chapters/level4_finite_differences.html#application-the-heat-equation",
    "title": "5¬† Level 3: Finite Differences and the Heat Equation",
    "section": "",
    "text": "Acharya: Consider the 1D heat equation: \\[\nu_t = \\alpha u_{xx}, \\quad 0 &lt; x &lt; 1,\\; t&gt;0\n\\] with boundary conditions \\(u(0,t) = u(1,t) = 0\\) and initial profile \\(u(x,0) = f(x)\\).\nWe set up a grid: - In space: \\(x_i = i\\Delta x,\\; i=0,\\dots,N\\)\n- In time: \\(t^n = n\\Delta t,\\; n=0,1,2,\\dots\\)\nAt each point, let \\(u_i^n \\approx u(x_i,t^n)\\).\nPavni: And now we replace derivatives?\nAcharya: Correct.\n- Time derivative (forward difference): \\[\n  u_t(x_i,t^n) \\approx \\frac{u_i^{n+1} - u_i^n}{\\Delta t}\n  \\] - Spatial second derivative (central difference): \\[\n  u_{xx}(x_i,t^n) \\approx \\frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{(\\Delta x)^2}\n  \\]\nPlugging these into the PDE, we get: \\[\n\\frac{u_i^{n+1} - u_i^n}{\\Delta t} = \\alpha \\,\\frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{(\\Delta x)^2}.\n\\]\nRearranging: \\[\nu_i^{n+1} = u_i^n + \\lambda\\,(u_{i-1}^n - 2u_i^n + u_{i+1}^n),\n\\] where \\(\\lambda = \\frac{\\alpha \\Delta t}{(\\Delta x)^2}\\).",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 3: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#stability-condition",
    "href": "chapters/level4_finite_differences.html#stability-condition",
    "title": "5¬† Level 3: Finite Differences and the Heat Equation",
    "section": "5.2 Stability Condition",
    "text": "5.2 Stability Condition\n\nPavni: So we can just keep applying this formula to march forward in time?\nAcharya: Yes, but with a caveat. This scheme, called FTCS (Forward Time, Central Space), is only stable if: \\[\n\\lambda \\leq \\tfrac{1}{2}.\n\\]\nPavni: So if \\(\\Delta t\\) is too large, the scheme fails?\nAcharya: Exactly. The numerical solution will blow up, even though the true solution is stable. Choosing \\(\\Delta t\\) small enough ensures stability.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 3: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#mini-quizzes",
    "href": "chapters/level4_finite_differences.html#mini-quizzes",
    "title": "5¬† Level 3: Finite Differences and the Heat Equation",
    "section": "5.3 Mini-Quizzes",
    "text": "5.3 Mini-Quizzes\n\nQuiz 1:\nLet \\(u(x) = x^2\\). With \\(\\Delta x = 0.1\\), approximate \\(u'(1)\\) using:\n1. Forward difference\n2. Central difference\nCompare with the exact derivative \\(u'(1) = 2\\). Which is more accurate?\n\n\n\n\n\n\n\nTipAnswer 1\n\n\n\n\n\n\nForward difference: \\[\n\\frac{u(1+\\Delta x)-u(1)}{\\Delta x}=\\frac{(1.1)^2-1^2}{0.1}=\\frac{1.21-1}{0.1}=2.1.\n\\]\nCentral difference: \\[\n\\frac{u(1+\\Delta x)-u(1-\\Delta x)}{2\\Delta x}\n=\\frac{(1.1)^2-(0.9)^2}{0.2}=\\frac{1.21-0.81}{0.2}=2.0.\n\\]\nExact derivative: \\(u'(1)=2\\).\n\nConclusion: The central difference gives the exact value here (error \\(0\\)), while the forward difference has error \\(0.1\\). Central is more accurate (as expected ‚Äî it is second-order).\n\n\n\n\n\nQuiz 2:\nSuppose \\(\\alpha = 1\\), \\(\\Delta x = 0.1\\). What is the maximum \\(\\Delta t\\) for stability in the explicit scheme?\n(Hint: \\(\\lambda = \\dfrac{\\alpha \\Delta t}{(\\Delta x)^2} \\leq \\tfrac{1}{2}\\).)\n\n\n\n\n\n\n\nTipAnswer 2\n\n\n\n\n\nWe need \\[\n\\lambda=\\frac{\\alpha\\,\\Delta t}{(\\Delta x)^2}\\le\\frac{1}{2}.\n\\] With \\(\\alpha=1\\) and \\(\\Delta x=0.1\\), \\((\\Delta x)^2=0.01\\). So \\[\n\\frac{\\Delta t}{0.01}\\le\\frac{1}{2}\\quad\\Rightarrow\\quad\n\\Delta t \\le 0.01\\times\\frac{1}{2}=0.005.\n\\]\nMaximum allowable \\(\\displaystyle \\Delta t = 0.005\\).",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 3: Finite Differences and the Heat Equation</span>"
    ]
  },
  {
    "objectID": "chapters/level4_finite_differences.html#heat-equation-ftcs-matrix-form",
    "href": "chapters/level4_finite_differences.html#heat-equation-ftcs-matrix-form",
    "title": "5¬† Level 3: Finite Differences and the Heat Equation",
    "section": "5.4 Heat equation ‚Äî FTCS (matrix form)",
    "text": "5.4 Heat equation ‚Äî FTCS (matrix form)\nThis example shows the FTCS matrix method for the 1D heat equation and produces snapshot plots.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nalpha = 1.0\nNx    = 50\nT     = 0.1\nL, R  = 0.0, 0.0\n\ndx = 1.0/(Nx-1)\ndt_max = dx*dx/(2*alpha)\ns  = 0.4\ndt = s*dt_max\nNt = int(T/dt)\ndt = T/Nt\nr  = alpha*dt/dx**2\n\nx  = np.linspace(0.0, 1.0, Nx)\nu0 = np.sin(np.pi * x)\n\nm = Nx - 2\nmain = (1 - 2*r) * np.ones(m)\noff  = r * np.ones(m-1)\nA = np.diag(main) + np.diag(off,1) + np.diag(off,-1)\n\nb = np.zeros(m)\nb[0], b[-1] = r*L, r*R\n\nu = u0.copy()\nu_in = u[1:-1].copy()\nsnapshots = []\n# pick ~5 evenly spaced times\nsnap_times = np.linspace(0, Nt-1, 5, dtype=int)\n\nfor j in range(Nt):\n    u_in = A @ u_in + b\n    u[1:-1] = u_in\n    if j in snap_times or j == Nt-1:\n        snapshots.append((j*dt, u.copy()))\n\nplt.figure(figsize=(8,4))\nfor t_here, u_snap in snapshots:\n    # numerical\n    plt.plot(x, u_snap, label=f\"num t={t_here:.3f}\")\n    # exact\n    u_exact = np.exp(-np.pi**2*alpha*t_here) * np.sin(np.pi*x)\n    plt.plot(x, u_exact, 'k--', linewidth=1.2)\n\nplt.xlabel('x'); plt.ylabel('u(x,t)')\nplt.title('Heat equation: numerical vs exact')\nplt.legend(fontsize='small')\nplt.grid(True)\nplt.show()",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Level 3: Finite Differences and the Heat Equation</span>"
    ]
  }
]